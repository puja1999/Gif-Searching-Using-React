{"version":3,"sources":["GifSearch.jsx","App.js","index.js"],"names":["GifSearch","useState","search","setSearch","gifs","setGifs","loading","setLoading","className","type","placeholder","value","onChange","e","target","onClick","length","fetch","then","res","json","result","data","map","gif","images","fixed_height","url","catch","alert","src","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKAmEeA,EA7DG,WAChB,MAA0BC,mBAAS,IAAnC,mBAAKC,EAAL,KAAaC,EAAb,KACA,EAAsBF,mBAAS,IAA/B,mBAAKG,EAAL,KAAWC,EAAX,KACA,EAA4BJ,oBAAS,GAArC,mBAAKK,EAAL,KAAcC,EAAd,KAwBA,OACE,qCACE,qBAAKC,UAAU,SAAf,SACE,gCACE,uBACEC,KAAK,OACLC,YAAY,cACZC,MAAOT,EACPU,SAAU,SAACC,GAAD,OAAOV,EAAUU,EAAEC,OAAOH,UAEtC,wBAAQI,QAhCA,WACVb,EAAOc,OAAS,IAClBT,GAAW,GAEXU,MAXJ,kFAWsBf,GACfgB,MAAK,SAACC,GAEL,OADAZ,GAAW,GACJY,EAAIC,UAEZF,MAAK,SAACG,GACLhB,EACEgB,EAAOC,KAAKC,KAAI,SAACC,GACf,OAAOA,EAAIC,OAAOC,aAAaC,WAIpCC,OAAM,WACLrB,GAAW,GACXsB,MAAM,6BAcN,yBAGJ,qBAAKrB,UAAU,SAAf,SACGF,EACC,qBAAKE,UAAU,UAAf,SACE,qBAAKA,UAAU,aAGjB,qBAAKA,UAAU,OAAf,SACGJ,EAAKmB,KAAI,SAACC,GACT,OACE,qBAAKhB,UAAU,OAAf,SACE,qBAAKsB,IAAKN,iBC7CbO,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.f079c703.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport './App.css';\r\n\r\nconst GIPHY_API =\r\n  \"https://api.giphy.com/v1/gifs/search?api_key=dc6zaTOxFJmzC&limit=20&offset=9&q=\";\r\n\r\nconst GifSearch = () => {\r\n  let [search, setSearch] = useState(\"\");\r\n  let [gifs, setGifs] = useState([]);\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  let searchGif = () => {\r\n    if (search.length > 0) {\r\n      setLoading(true);\r\n\r\n      fetch(GIPHY_API + search)\r\n        .then((res) => {\r\n          setLoading(false);\r\n          return res.json();\r\n        })\r\n        .then((result) => {\r\n          setGifs(\r\n            result.data.map((gif) => {\r\n              return gif.images.fixed_height.url;\r\n            })\r\n          );\r\n        })\r\n        .catch(() => {\r\n          setLoading(false);\r\n          alert(\"Something went wrong\");\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search GIFs\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n          />\r\n          <button onClick={searchGif}>Search</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"result\">\r\n        {loading ? (\r\n          <div className=\"loading\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"list\">\r\n            {gifs.map((gif) => {\r\n              return (\r\n                <div className=\"item\">\r\n                  <img src={gif} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifSearch;\r\n","import React from 'react';\nimport GifSearch from './GifSearch';\n\nfunction App() {\n  return (\n    <>\n      <GifSearch/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}